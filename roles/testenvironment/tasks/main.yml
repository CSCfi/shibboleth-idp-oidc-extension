---

- name: configure shibboleth-idp ldap.properties
  lineinfile: dest={{ idp_home }}/conf/ldap.properties regexp="^#?\s*({{ item.option }}\s*=)" backrefs=yes  line="\\1 {{ item.value }}"
  with_items:
    - { option: 'idp.authn.LDAP.authenticator', value: 'bindSearchAuthenticator'}
    - { option: 'idp.authn.LDAP.ldapURL', value: 'ldap://localhost:389' }
    - { option: 'idp.authn.LDAP.useStartTLS', value: 'false' }
    - { option: 'idp.authn.LDAP.useSSL', value: 'false' }
    - { option: 'idp.authn.LDAP.baseDN', value: 'ou=People,{{ dirsrv_suffix }}' }
    - { option: 'idp.authn.LDAP.bindDN', value: 'cn=Directory Manager' }
    - { option: 'idp.authn.LDAP.bindDNCredential', value: '{{ dirsrv_password }}' }

- name: configure shibboleth-idp idp.properties
  lineinfile: dest={{ idp_home }}/conf/idp.properties regexp="^#?\s*({{ item.option }}\s*=)" backrefs=yes  line="\\1 {{ item.value }}"
  with_items:
    - { option: 'idp.session.StorageService', value: 'shibboleth.StorageService' }
    - { option: 'idp.entityID', value: 'https://{{ service_name }}' }

- template: src={{ playbook_dir }}/roles/testenvironment/ldif/{{item}} dest=/tmp/{{item}}
  with_items:
    - "aci-{{ aci | regex_replace('(^.*)@(.*)$','\\1') }}.ldif"

- set_fact:
    acifile: "/tmp/aci-{{ aci | regex_replace('(^.*)@(.*)$','\\1') }}.ldif"
  when: aci is defined

- name: ACI | Add
  shell: ldapmodify -x -D "{{ dirsrv_rootdn }}" -H ldap://localhost:389 -w {{ dirsrv_password }} -f {{ acifile }}
  ignore_errors: yes
  when: aci is defined

- name: Apache | mod_auth_openidc
  package: name=mod_auth_openidc state=present

- name: Apache | mod_php
  package: name=mod_php state=present

- name: Set mod_auth_openidc properties
  blockinfile:
    dest: "/etc/httpd/conf.d/auth_openidc.conf"
    marker: "# {mark} ANSIBLE MANAGER BLOCK"
    insertafter: "#OIDCUserInfoRefreshInterval <seconds>"
    content: |
         OIDCOAuthSSLValidateServer Off
         OIDCSSLValidateServer Off
         OIDCRedirectURI https://192.168.0.150:8443/protected/redirect_uri
         OIDCCryptoPassphrase secret
         OIDCMetadataDir /var/cache/httpd/mod_auth_openidc/metadata
         OIDCResponseType "code"
         OIDCScope "openid profile email address phone"
         <Location /protected/>
             authtype openid-connect
             require valid-user
         </Location>

- name: Ensure /var/www/html/protected dir exists
  file: path="/var/www/html/protected" state=directory

- name: Copy index.php for presenting logged in user information
  template: src={{ playbook_dir }}/roles/testenvironment/templates/{{item}} dest=/var/www/html/protected/{{item}}
  with_items:
    - "index.php"

- name: Restart shibboleth idp
  service:
    name: shibboleth-idp
    state: restarted

- name: Set httpd enabled and restart
  service:
    name: httpd
    state: restarted
    enabled: yes

