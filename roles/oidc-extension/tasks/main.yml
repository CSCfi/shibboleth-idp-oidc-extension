---

- name: Ensure "{{ idp_home }}/flows/oidc" dir exists
  file: path="{{ idp_home }}/flows/oidc" state=directory

- name: Copy oidc flow and beans
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
    remote_src: no
  with_items:
    - { src: "{{ playbook_dir }}/idp-oidc-extension-impl/src/main/resources/flows/oidc/oidc-flow.xml", dest: "{{ idp_home }}/flows/oidc/oidc-flow.xml" }
    - { src: "{{ playbook_dir }}/idp-oidc-extension-impl/src/main/resources/flows/oidc/oidc-beans.xml", dest: "{{ idp_home }}/flows/oidc/oidc-beans.xml" }

- name: Copy nimbus-jose-jwt jar for bulding new idp.war
  copy:
    src: "{{ playbook_dir }}/idp-oidc-extension-impl/target/dependency/nimbus-jose-jwt-4.34.2.jar"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/nimbus-jose-jwt-4.34.2.jar"
    owner: root
    group: root
    mode: 0644
    remote_src: no

- name: Copy oauth2-oidc-sdk jar for bulding new idp.war
  copy:
    src: "{{ playbook_dir }}/idp-oidc-extension-impl/target/dependency/oauth2-oidc-sdk-5.24.1.jar"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/oauth2-oidc-sdk-5.24.1.jar"
    owner: root
    group: root
    mode: 0644
    remote_src: no

- name: Copy idp-oidc-extension-impl jar for bulding new idp.war
  copy:
    src: "{{ playbook_dir }}/idp-oidc-extension-impl/target/idp-oidc-extension-impl-0.5-SNAPSHOT.jar"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/idp-oidc-extension-impl-0.5-SNAPSHOT.jar"
    owner: root
    group: root
    mode: 0644
    remote_src: no

#add copy of basic set of dependencies

- name: Build new idp.war
  shell: source {{ environment_file }} && "{{ idp_home }}/bin/build.sh"
  become_user: root

- name: Restart shibboleth idp
  service:
    name: shibboleth-idp
    state: restarted

- template: src={{ playbook_dir }}/roles/oidc-extension/ldif/{{item}} dest=/tmp/{{item}}
  with_items:
    - "aci-{{ aci | regex_replace('(^.*)@(.*)$','\\1') }}.ldif"

- set_fact:
    acifile: "/tmp/aci-{{ aci | regex_replace('(^.*)@(.*)$','\\1') }}.ldif"
  when: aci is defined

- name: ACI | Add
  shell: ldapmodify -x -D "{{ dirsrv_rootdn }}" -H ldap://localhost:389 -w {{ dirsrv_password }} -f {{ acifile }}
  ignore_errors: yes
  when: aci is defined
