---

- name: Ensure "{{ idp_home }}/flows/oidc" dir exists
  file: path="{{ idp_home }}/flows/oidc" state=directory

- name: Copy oidc flow, views and beans
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
    remote_src: no
  with_items:
    - { src: "{{ playbook_dir }}/idp-oidc-extension-impl/src/main/resources/flows/oidc/oidc-flow.xml", dest: "{{ idp_home }}/flows/oidc/oidc-flow.xml" }
    - { src: "{{ playbook_dir }}/idp-oidc-extension-impl/src/main/resources/flows/oidc/oidc-beans.xml", dest: "{{ idp_home }}/flows/oidc/oidc-beans.xml" }
    - { src: "{{ playbook_dir }}/idp-oidc-extension-impl/src/main/resources/views/oidc-error.vm", dest: "{{ idp_home }}/views/oidc-error.vm" }


- local_action: find paths="{{ playbook_dir }}/idp-oidc-extension-impl/target/dependency" patterns="nimbus-jose-jwt*.jar"
  sudo: no
  register: nimbus_match

- name: Copy nimbus-jose-jwt jar for bulding new idp.war
  copy:
    src: "{{ item.path }}"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/nimbus-jose-jwt.jar"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ nimbus_match.files }}"

- name: Copy oauth2-oidc-sdk jar for bulding new idp.war
  copy:
    src: "{{ playbook_dir }}/idp-oidc-extension-impl/target/dependency/oauth2-oidc-sdk-5.24.1.jar"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/oauth2-oidc-sdk-5.24.1.jar"
    owner: root
    group: root
    mode: 0644
    remote_src: no

- name: Copy stepup dependency lang-tag.jar for bulding new idp.war
  copy:
    src: "{{ playbook_dir }}/idp-oidc-extension-impl/target/dependency/lang-tag-1.4.3.jar"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/lang-tag-1.4.3.jar"
    owner: root
    group: root
    mode: 0644
    remote_src: no

- name: Copy stepup dependency json-smart.jar for bulding new idp.war
  copy:
    src: "{{ playbook_dir }}/idp-oidc-extension-impl/target/dependency/json-smart-1.3.1.jar"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/json-smart-1.3.1.jar"
    owner: root
    group: root
    mode: 0644
    remote_src: no

- name: Copy stepup dependency commons-lang3.jar for bulding new idp.war
  copy:
    src: "{{ playbook_dir }}/idp-oidc-extension-impl/target/dependency/commons-lang3-3.5.jar"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/commons-lang3-3.5.jar"
    owner: root
    group: root
    mode: 0644
    remote_src: no

- name: Copy stepup dependency commons-collections4.jar for bulding new idp.war
  copy:
    src: "{{ playbook_dir }}/idp-oidc-extension-impl/target/dependency/commons-collections4-4.1.jar"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/commons-collections4-4.1.jar"
    owner: root
    group: root
    mode: 0644
    remote_src: no

- name: Copy dependency gson bulding new idp.war
  copy:
    src: "{{ playbook_dir }}/idp-oidc-extension-impl/target/dependency/gson-2.8.0.jar"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/gson-2.8.0.jar"
    owner: root
    group: root
    mode: 0644
    remote_src: no

- name: Copy idp-oidc-extension-api jar for bulding new idp.war
  copy:
    src: "{{ playbook_dir }}/idp-oidc-extension-api/target/idp-oidc-extension-api-0.5-SNAPSHOT.jar"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/idp-oidc-extension-api-0.5-SNAPSHOT.jar"
    owner: root
    group: root
    mode: 0644
    remote_src: no

- name: Copy idp-oidc-extension-impl jar for bulding new idp.war
  copy:
    src: "{{ playbook_dir }}/idp-oidc-extension-impl/target/idp-oidc-extension-impl-0.5-SNAPSHOT.jar"
    dest: "{{ idp_home }}/edit-webapp/WEB-INF/lib/idp-oidc-extension-impl-0.5-SNAPSHOT.jar"
    owner: root
    group: root
    mode: 0644
    remote_src: no

#add copy of basic set of dependencies

- name: Build new idp.war
  shell: source {{ environment_file }} && "{{ idp_home }}/bin/build.sh"
  become_user: root

- name: configure shibboleth-idp ldap.properties
  lineinfile: dest={{ idp_home }}/conf/ldap.properties regexp="^#?\s*({{ item.option }}\s*=)" backrefs=yes  line="\\1 {{ item.value }}"
  with_items:
    - { option: 'idp.authn.LDAP.authenticator', value: 'bindSearchAuthenticator'}
    - { option: 'idp.authn.LDAP.ldapURL', value: 'ldap://{{ hostvars[inventory_hostname].service_name }}:389' }
    - { option: 'idp.authn.LDAP.useStartTLS', value: 'false' }
    - { option: 'idp.authn.LDAP.useSSL', value: 'false' }
    - { option: 'idp.authn.LDAP.baseDN', value: 'ou=People,{{ dirsrv_suffix }}' }
    - { option: 'idp.authn.LDAP.bindDN', value: 'cn=Directory Manager' }
    - { option: 'idp.authn.LDAP.bindDNCredential', value: '{{ dirsrv_password }}' }

- name: configure shibboleth-idp idp.properties
  lineinfile: dest={{ idp_home }}/conf/idp.properties regexp="^#?\s*({{ item.option }}\s*=)" backrefs=yes  line="\\1 {{ item.value }}"
  with_items:
    - { option: 'idp.session.StorageService', value: 'shibboleth.StorageService' }

- name: Add one trusted test SP
  blockinfile:
    dest: "{{ idp_home }}/conf/metadata-providers.xml"
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    insertbefore: "</MetadataProvider>"
    content: |
          <MetadataProvider id="HTTPMetadata"
                            xsi:type="FileBackedHTTPMetadataProvider"
                            backingFile="/tmp/metadatacopy.xml"
                            metadataURL="https://mpass-proxy-test.csc.fi/attributetest/Shibboleth.sso/Metadata"> 
              <MetadataFilter xsi:type="EntityRoleWhiteList">
                  <RetainedRole>md:SPSSODescriptor</RetainedRole>
              </MetadataFilter>
          </MetadataProvider>

- name: Add metadata filter for trusted test SP
  blockinfile:
    dest: "{{ idp_home }}/conf/attribute-filter.xml"
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    insertbefore: "</AttributeFilterPolicyGroup>"
    content: |
         <AttributeFilterPolicy id="demo_rp">
             <PolicyRequirementRule xsi:type="Requester" value="demo_rp" />
             <AttributeRule attributeID="eduPersonPrincipalName">
                 <PermitValueRule xsi:type="ANY" />
             </AttributeRule>
             <AttributeRule attributeID="age">
                 <PermitValueRule xsi:type="ANY" />
             </AttributeRule>
             <AttributeRule attributeID="eduPersonAffiliation">
                 <PermitValueRule xsi:type="ANY" />
             </AttributeRule>
             <AttributeRule attributeID="uid">
                 <PermitValueRule xsi:type="ANY" />
             </AttributeRule>
             <AttributeRule attributeID="mail">
                 <PermitValueRule xsi:type="ANY" />
             </AttributeRule>
         </AttributeFilterPolicy>

- name: Add OIDC.SSO profile configuration to relying-party-system.xml
  blockinfile:
    dest: "{{ idp_home }}/system/conf/relying-party-system.xml"
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    insertbefore: "<bean id=\"CAS.LoginConfiguration\""
    content: |
          <bean id="OIDC.SSO"
              class="org.geant.idpextension.oidc.config.OIDCProtocolConfiguration"
              p:securityConfiguration-ref="%{idp.security.config:shibboleth.DefaultSecurityConfiguration}"
              p:servletRequest-ref="shibboleth.HttpServletRequest" />

- name: Add OIDC.SSO profile configuration to relying-party.xml
  blockinfile:
    dest: "{{ idp_home }}/conf/relying-party.xml"
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    insertbefore: "</util:list>"
    content: |
          <bean parent="RelyingPartyByName" c:relyingPartyIds="demo_rp">
               <property name="profileConfigurations">
                    <list>
                        <bean parent="OIDC.SSO" p:postAuthenticationFlows="attribute-release" />
                    </list>
                </property>
          </bean>

- template: src={{ playbook_dir }}/roles/oidc-extension/templates/{{item}} dest=/opt/shibboleth-idp/conf/{{item}}
  with_items:
    - "logback.xml"

- template: src={{ playbook_dir }}/roles/oidc-extension/templates/{{item}} dest=/opt/shibboleth-idp/metadata/{{item}}
  with_items:
    - "oidc-client.json"

- name: Setting static.xml for jetty to serve static content
  template: 
    src: static.xml 
    dest: "{{ idp_home }}/jetty-base/webapps/static.xml"

- name: Setting modified attribute-resolver.xml
  template:
    src: attribute-resolver.xml
    dest: "{{ idp_home }}/conf/attribute-resolver.xml"

- name: Setting modified general-authn.xml
  template:
    src: general-authn.xml
    dest: "{{ idp_home }}/conf/authn/general-authn.xml"

- name: Setting modified authn-comparison.xml
  template:
    src: authn-comparison.xml
    dest: "{{ idp_home }}/conf/authn/authn-comparison.xml"

- name: Ensure "{{ idp_home }}/static" dir exists
  file: path="{{ idp_home }}/static/" state=directory

- name: Setting index.html containing authentication links
  template:
    src: index.html
    dest: "{{ idp_home }}/static/index.html"

- name: Restart shibboleth idp
  service:
    name: shibboleth-idp
    state: restarted

- template: src={{ playbook_dir }}/roles/oidc-extension/ldif/{{item}} dest=/tmp/{{item}}
  with_items:
    - "aci-{{ aci | regex_replace('(^.*)@(.*)$','\\1') }}.ldif"

- set_fact:
    acifile: "/tmp/aci-{{ aci | regex_replace('(^.*)@(.*)$','\\1') }}.ldif"
  when: aci is defined

- name: ACI | Add
  shell: ldapmodify -x -D "{{ dirsrv_rootdn }}" -H ldap://localhost:389 -w {{ dirsrv_password }} -f {{ acifile }}
  ignore_errors: yes
  when: aci is defined
