<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <!-- This file contains predicates for oidc attribute encoding purposes. -->

    <!-- UserInfoPredicate & IDTokenPredicate are meant to implement claim 
        splitting by activating encoders in attribute resolver -->

    <!-- This predicate returns true if we are encoding attribute for userinfo 
        response. Having this predicate as encoder activation condition ensures the 
        claim is encoded only for userinfo response. -->

    <bean id="UserInfoPredicate" class="com.google.common.base.Predicates"
        factory-method="and">
        <constructor-arg>
            <bean
                class="net.shibboleth.utilities.java.support.logic.StrategyIndirectedPredicate">
                <constructor-arg name="objectStrategy">
                    <bean
                        class="org.opensaml.profile.context.navigate.ProfileIdLookup" />
                </constructor-arg>
                <constructor-arg name="collection">
                    <ref bean="UserInfoProfiles" />
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <!-- This predicate returns true if we are encoding attribute for id 
        token. Having this predicate as encoder activation condition ensures the 
        claim is encoded only for id token. -->

    <bean id="IDTokenPredicate" class="com.google.common.base.Predicates"
        factory-method="and">
        <constructor-arg>
            <bean
                class="net.shibboleth.utilities.java.support.logic.StrategyIndirectedPredicate">
                <constructor-arg name="objectStrategy">
                    <bean
                        class="org.opensaml.profile.context.navigate.ProfileIdLookup" />
                </constructor-arg>
                <constructor-arg name="collection">
                    <ref bean="IDTokenProfiles" />
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <!-- List here all profiles providing userinfo response and not id token -->

    <util:list id="UserInfoProfiles">
        <value>http://csc.fi/ns/profiles/oidc/userinfo</value>
    </util:list>

    <!-- List here all profiles providing id token and not id userinfo -->

    <util:list id="IDTokenProfiles">
        <value>http://csc.fi/ns/profiles/oidc/sso/browser</value>
    </util:list>

</beans>

