<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    default-init-method="initialize" default-destroy-method="destroy">

    <!-- This is one of the few properties we rely on that has no default. -->
    <!-- needed to share common credentials.xml file with saml -->
    <bean id="entityID" class="java.lang.String" c:_0="%{idp.entityID}" />

    <!-- This is one of the few properties we rely on that has no default. -->
    <bean id="issuer" class="java.lang.String" c:_0="%{idp.oidc.issuer}" />

    <!-- Configure profiles that need to use other than entity id as responder id. -->
    <util:map id="profileResponders">
        <entry key-ref="OIDC.SSO" value="#{getObject('issuer')}" />
        <entry key-ref="OIDC.Registration" value="#{getObject('issuer')}" />
        <entry key-ref="OIDC.Configuration" value="#{getObject('issuer')}" />
    </util:map>

    <!-- Lookup method to select responder id -->
    <bean id="profileResponderIdLookupFunction" class="org.geant.idpextension.oidc.profile.context.navigate.ProfileResponderIdLookupFunction"
        p:defaultResponder="#{getObject('entityID')}" p:profileResponders-ref="profileResponders" />

    <!-- OIDC Profile Configurations. -->
    <bean id="OIDC.SSO" class="org.geant.idpextension.oidc.config.OIDCCoreProtocolConfiguration"
        p:securityConfiguration-ref="%{idp.security.oidc.config:shibboleth.oidc.DefaultSecurityConfiguration}"
        p:iDTokenLifetime="%{idp.oidc.idToken.defaultLifetime:PT1H}" p:accessTokenLifetime="%{idp.oidc.accessToken.defaultLifetime:PT10M}"
        p:authorizeCodeLifetime="%{idp.oidc.authorizeCode.defaultLifetime:PT5M}" p:refreshTokenLifetime="%{idp.oidc.refreshToken.defaultLifetime:PT2H}"
        p:servletRequest-ref="shibboleth.HttpServletRequest"
        p:tokenEndpointAuthMethods="%{idp.oidc.tokenEndpointAuthMethods:client_secret_basic,client_secret_post,client_secret_jwt,private_key_jwt}" />
    <bean id="OIDC.UserInfo" class="org.geant.idpextension.oidc.config.OIDCUserInfoConfiguration"
        p:securityConfiguration-ref="%{idp.security.oidc.config:shibboleth.oidc.DefaultSecurityConfiguration}"
        p:servletRequest-ref="shibboleth.HttpServletRequest" />
    <bean id="OIDC.Registration" class="org.geant.idpextension.oidc.config.OIDCDynamicRegistrationConfiguration"
        p:securityConfiguration-ref="%{idp.security.oidc.config:shibboleth.oidc.DefaultSecurityConfiguration}"
        p:servletRequest-ref="shibboleth.HttpServletRequest"
        p:tokenEndpointAuthMethods="%{idp.oidc.dynreg.tokenEndpointAuthMethods:client_secret_basic,client_secret_post,client_secret_jwt,private_key_jwt}" />
    <bean id="OIDC.Configuration" class="org.geant.idpextension.oidc.config.OIDCProviderInformationConfiguration"
        p:securityConfiguration-ref="%{idp.security.oidc.config:shibboleth.oidc.DefaultSecurityConfiguration}" p:servletRequest-ref="shibboleth.HttpServletRequest"/>

    <!-- Security Configuration Defaults These settings establish the default security configurations for signatures and 
        loads the default credentials used. -->

    <bean id="shibboleth.oidc.DefaultSecurityConfiguration" class="net.shibboleth.idp.profile.config.SecurityConfiguration">
        <property name="signatureSigningConfiguration">
            <ref bean="#{'%{idp.oidc.signing.config:shibboleth.oidc.SigningConfiguration}'.trim()}" />
        </property>
    </bean>

    <bean id="shibboleth.oidc.SigningConfiguration" parent="shibboleth.BasicSignatureSigningConfiguration">
        <property name="signingCredentials">
            <list>
                <ref bean="shibboleth.oidc.DefaultRSSigningCredential" />
                <ref bean="shibboleth.oidc.DefaultESSigningCredential" />
            </list>
        </property>
        <property name="signatureAlgorithms">
            <list>
                <util:constant
                    static-field="org.geant.idpextension.oidc.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_RS_256" />
                <util:constant
                    static-field="org.geant.idpextension.oidc.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_RS_384" />
                <util:constant
                    static-field="org.geant.idpextension.oidc.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_RS_512" />
                <util:constant
                    static-field="org.geant.idpextension.oidc.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_ES_256" />

<!-- Not supported by the configured EC key

                <util:constant
                    static-field="org.geant.idpextension.oidc.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_ES_384" />
                <util:constant
                    static-field="org.geant.idpextension.oidc.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_ES_512" />
-->

                <util:constant
                    static-field="org.geant.idpextension.oidc.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_HS_256" />
                <util:constant
                    static-field="org.geant.idpextension.oidc.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_HS_384" />
                <util:constant
                    static-field="org.geant.idpextension.oidc.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_HS_512" />
            </list>
        </property>
    </bean>

</beans>
