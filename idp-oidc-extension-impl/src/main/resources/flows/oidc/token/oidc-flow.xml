<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">

    <action-state id="InitializeMandatoryContexts">
        <evaluate expression="InitializeProfileRequestContext" />
        <evaluate expression="InitializeOutboundMessageContext" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="DecodeMessage" />
    </action-state>

    <action-state id="DecodeMessage">
        <evaluate expression="DecodeMessage" />
        <evaluate expression="PostDecodePopulateAuditContext" />
        <evaluate expression="OIDCMetadataLookup" />
        <evaluate expression="InitializeRelyingPartyContext" />
        <evaluate expression="SelectRelyingPartyConfiguration" />
        <evaluate expression="SelectProfileConfiguration" />
        <evaluate expression="PostLookupPopulateAuditContext" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="OutboundContextsAndSecurityParameters" />
    </action-state>

    <action-state id="OutboundContextsAndSecurityParameters">
        <evaluate expression="ValidateEndpointAuthentication" />
        <evaluate expression="ValidateGrantType" />
        <evaluate expression="ValidateGrant" />
        <evaluate expression="ValidateRedirectURI" />
        <evaluate expression="ValidateScope" />
        <evaluate expression="SetRequestedClaimsToResponseContext" />
        <evaluate expression="SetAuthenticationContextClassReferenceToResponseContext" />
        <evaluate expression="SetAuthenticationTimeToResponseContext" />
        <evaluate expression="SetTokenDeliveryAttributesToResponseContext" />
        <evaluate expression="SetConsentToResponseContext" />
        <evaluate expression="ReduceValidatedScope" />
        <evaluate expression="PopulateIDTokenSignatureSigningParameters" />
        <evaluate expression="PopulateIDTokenEncryptionParameters" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="PostInitialSetup" />
    </action-state>

    <action-state id="PostInitialSetup">
        <evaluate expression="InitializeSubjectContext" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="AttributeResolution" />
    </action-state>

    <action-state id="AttributeResolution">
        <evaluate expression="ResolveAttributes" />
        <evaluate expression="FilterAttributes" />
        <evaluate expression="SetSubjectToResponseContext" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="BuildResponse" />
    </action-state>

    <action-state id="BuildResponse">
        <evaluate expression="SetAccessTokenToResponseContext" />
        <evaluate expression="SetRefreshTokenToResponseContext" />
        <evaluate expression="AddIDTokenShell" />
        <evaluate expression="AddAttributeClaimsToIDToken" />
        <evaluate expression="AddTokenDeliveryAttributesToIDToken" />
        <evaluate expression="AddAuthTimeToIDToken" />
        <evaluate expression="AddAcrToIDToken" />
        <evaluate expression="AddNonceToIDToken" />
        <evaluate expression="AddAccessTokenHashToIDToken" />
        <evaluate expression="SignIDToken" />
        <evaluate expression="EncryptIDToken" />
        <evaluate expression="FormOutboundMessage" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="CommitResponse" />
    </action-state>

    <!-- Passthrough state if an exception is thrown. -->
    <action-state id="LogRuntimeException">
        <on-entry>
            <evaluate
                expression="T(org.slf4j.LoggerFactory).getLogger('org.geant.idpextension.oidc.profile').error('Uncaught runtime exception', flowExecutionException.getCause())" />
        </on-entry>
        <evaluate expression="'RuntimeException'" />
        <transition to="HandleError" />
    </action-state>

    <action-state id="HandleError">
        <on-entry>
            <evaluate
                expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext), true).setRequestContext(flowRequestContext)" />
            <evaluate expression="LogEvent" />
        </on-entry>
        <evaluate expression="BuildErrorResponseFromEvent" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="CommitResponse" />
    </action-state>

    <!-- end state -->
    <end-state id="CommitResponse">
        <on-entry>
            <evaluate expression="EncodeMessage" />
            <evaluate expression="PostResponsePopulateAuditContext" />
            <evaluate expression="WriteAuditLog" />            
            <evaluate expression="RecordResponseComplete" />
        </on-entry>
    </end-state>

    <!-- all unhandled non proceed results are turned into errors -->
    <global-transitions>
        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="HandleError" />
    </global-transitions>


    <bean-import resource="../../../system/flows/saml/security-beans.xml" />
    <bean-import resource="oidc-beans.xml" />

</flow>
