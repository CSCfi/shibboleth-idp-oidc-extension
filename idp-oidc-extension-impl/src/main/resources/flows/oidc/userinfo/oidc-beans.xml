<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    default-init-method="initialize" default-destroy-method="destroy">

    <!-- Import core common beans. -->
    <import resource="../oidc-core-common-beans.xml" />

    <!-- The profile and logging id used as arguments are for development phase only -->
    <bean id="InitializeProfileRequestContext"
        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
        p:profileId="http://csc.fi/ns/profiles/oidc/userinfo" p:loggingId="%{idp.service.logging.saml2sso:SSO}" />

    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
        <constructor-arg>
            <bean class="org.geant.idpextension.oidc.decoding.impl.OIDCUserInfoRequestDecoder" scope="prototype"
                p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
        </constructor-arg>
    </bean>

    <bean id="InitializeOutboundMessageContext"
        class="org.geant.idpextension.oidc.profile.impl.InitializeOutboundUserInfoResponseMessageContext"
        scope="prototype" />

    <bean id="ValidateAccessToken" class="org.geant.idpextension.oidc.profile.impl.ValidateAccessToken"
        scope="prototype" c:sealer-ref="tokenSealer" p:revocationCache-ref="shibboleth.RevocationCache" />

    <bean id="OIDCMetadataLookup" class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor"
        scope="prototype" c:executionDirection="INBOUND">
        <constructor-arg name="messageHandler">
            <bean class="org.geant.idpextension.oidc.profile.impl.OIDCMetadataLookupHandler" scope="prototype">
                <property name="clientInformationResolver">
                    <ref bean="shibboleth.ClientInformationResolver" />
                </property>
                <property name="clientIDLookupStrategy">
                    <ref bean="shibboleth.UserInfoRequestClientIDLookupStrategy" />
                </property>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="shibboleth.UserInfoRequestClientIDLookupStrategy"
        class="org.geant.idpextension.oidc.profile.context.navigate.UserInfoRequestClientIDLookupFunction"
        scope="prototype" />

    <bean id="InitializeRelyingPartyContext"
        class="org.geant.idpextension.oidc.profile.impl.InitializeRelyingPartyContext" scope="prototype"
        p:clientIDLookupStrategy-ref="shibboleth.UserInfoRequestClientIDLookupStrategy" />

    <bean id="ValidateScope" class="org.geant.idpextension.oidc.profile.impl.ValidateScope" scope="prototype"
        p:scopeLookupStrategy-ref="shibboleth.TokenRequestScopeLookupStrategy" />

    <bean id="ValidateUserPresence" class="org.geant.idpextension.oidc.profile.impl.ValidateUserPresence"
        scope="prototype" c:sessionResolver-ref="shibboleth.SessionManager"
        p:disabled="%{idp.oidc.userPresenceCheckDisabled:false}" p:sessionTimeout="%{idp.session.timeout:PT60M}" />

    <bean id="shibboleth.TokenRequestScopeLookupStrategy"
        class="org.geant.idpextension.oidc.profile.context.navigate.TokenRequestScopeLookupFunction" scope="prototype" />

    <bean id="SetRequestedClaimsToResponseContext"
        class="org.geant.idpextension.oidc.profile.impl.SetRequestedClaimsToResponseContext" scope="prototype"
        p:requestedClaimsLookupStrategy-ref="shibboleth.TokenRequestRequestedClaimsLookupFunction" />

    <bean id="SetTokenDeliveryAttributesToResponseContext"
        class="org.geant.idpextension.oidc.profile.impl.SetTokenDeliveryAttributesFromTokenToResponseContext"
        scope="prototype" />

    <bean id="SetConsentToResponseContext"
        class="org.geant.idpextension.oidc.profile.impl.SetConsentFromTokenToResponseContext" scope="prototype">
    </bean>

    <bean id="PopulateUserInfoResponseSignatureSigningParameters"
        class="org.geant.idpextension.oidc.profile.impl.PopulateOIDCSignatureSigningParameters " scope="prototype"
        p:configurationLookupStrategy-ref="shibboleth.SignatureSigningConfigurationLookup"
        p:signatureSigningParametersResolver-ref="shibboleth.oidc.SignatureSigningParametersResolver">
        <property name="securityParametersContextLookupStrategy">
            <bean class="com.google.common.base.Functions" factory-method="compose"
                c:g-ref="shibboleth.ChildLookupOrCreate.SecurityParameters"
                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
        </property>
        <property name="existingParametersContextLookupStrategy">
            <bean class="com.google.common.base.Functions" factory-method="compose"
                c:g-ref="shibboleth.ChildLookup.SecurityParameters" c:f-ref="shibboleth.MessageContextLookup.Outbound" />
        </property>
    </bean>

    <bean id="PopulateUserInfoResponseEncryptionParameters"
        class="org.geant.idpextension.oidc.profile.impl.PopulateOIDCEncryptionParameters" scope="prototype"
        p:configurationLookupStrategy-ref="shibboleth.EncryptionConfigurationLookup"
        p:encryptionParametersResolver-ref="shibboleth.oidc.EncryptionParametersResolver" />

    <bean id="shibboleth.oidc.EncryptionParametersResolver"
        class="org.geant.idpextension.oidc.security.impl.OIDCClientInformationEncryptionParametersResolver"
        p:userInfoSigningResolver="true" />

    <bean id="shibboleth.TokenRequestRequestedClaimsLookupFunction"
        class="org.geant.idpextension.oidc.profile.context.navigate.TokenRequestRequestedClaimsLookupFunction"
        scope="prototype" />

    <bean id="InitializeSubjectContext" class="org.geant.idpextension.oidc.profile.impl.InitializeSubjectContext"
        scope="prototype" />

    <bean id="SetSubjectToResponseContext"
        class="org.geant.idpextension.oidc.profile.impl.SetSubjectToResponseContext" scope="prototype" />

    <bean id="AddUserInfoShell" class="org.geant.idpextension.oidc.profile.impl.AddUserInfoShell" scope="prototype"
        p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"></bean>

    <bean id="AddAttributeClaimsToUserInfo"
        class="org.geant.idpextension.oidc.profile.impl.AddAttributesToClaimsSet" scope="prototype"
        p:responseClaimsSetLookupStrategy-ref="shibboleth.UserInfoResponseClaimsSetLookupStrategy"
        p:reservedClaimNames-ref="shibboleth.oidc.UserInfoReservedClaimNames" />

    <bean id="AddTokenDeliveryAttributesToUserinfo"
        class="org.geant.idpextension.oidc.profile.impl.AddTokenDeliveryAttributesToClaimsSet"
        p:responseClaimsSetLookupStrategy-ref="shibboleth.UserInfoResponseClaimsSetLookupStrategy" scope="prototype" />

    <bean id="shibboleth.UserInfoResponseClaimsSetLookupStrategy"
        class="org.geant.idpextension.oidc.profile.context.navigate.UserInfoResponseClaimsSetLookupFunction"
        scope="prototype" />

    <bean id="SignUserInfoResponse" class="org.geant.idpextension.oidc.profile.impl.SignUserInfoResponse"
        scope="prototype">
        <property name="securityParametersLookupStrategy">
            <bean class="com.google.common.base.Functions" factory-method="compose"
                c:g-ref="shibboleth.ChildLookup.SecurityParameters" c:f-ref="shibboleth.ChildLookup.RelyingParty" />
        </property>
    </bean>

    <bean id="EncryptUserInfoResponse" class="org.geant.idpextension.oidc.profile.impl.EncryptProcessedToken"
        scope="prototype" />

    <bean id="FormOutboundMessage"
        class="org.geant.idpextension.oidc.profile.impl.FormOutboundUserInfoResponseMessage" scope="prototype" />
        
    <bean id="BuildErrorResponseFromEvent"
        class="org.geant.idpextension.oidc.profile.impl.BuildUserInfoErrorResponseFromEvent" scope="prototype"
        p:httpServletResponse-ref="shibboleth.HttpServletResponse">
        <property name="eventContextLookupStrategy">
            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
        </property>
        <property name="mappedErrors">
            <map value-type="com.nimbusds.oauth2.sdk.ErrorObject">
                <entry key="#{T(org.geant.idpextension.oidc.profile.OidcEventIds).INVALID_GRANT}"
                    value="#{T(com.nimbusds.oauth2.sdk.OAuth2Error).INVALID_GRANT}" />
            </map>
        </property>
    </bean>

</beans>
