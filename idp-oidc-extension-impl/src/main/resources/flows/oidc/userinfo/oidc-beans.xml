<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-init-method="initialize" default-destroy-method="destroy">


	<!-- The profile and logging id used as arguments are for development phase 
		only -->
	<bean id="InitializeProfileRequestContext"
		class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext"
		scope="prototype" p:profileId="http://csc.fi/ns/profiles/oidc/sso/browser"
		p:loggingId="%{idp.service.logging.saml2sso:SSO}" />

	<bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage"
		scope="prototype">
		<constructor-arg>
			<bean
				class="org.geant.idpextension.oidc.decoding.impl.OIDCUserInfoRequestDecoder"
				scope="prototype" p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
		</constructor-arg>
	</bean>

	<bean id="InitializeOutboundMessageContext"
		class="org.geant.idpextension.oidc.profile.impl.InitializeOutboundUserInfoResponseMessageContext"
		scope="prototype" />

	<bean id="ValidateAccessToken"
		class="org.geant.idpextension.oidc.profile.impl.ValidateAccessToken"
		scope="prototype" c:sealer-ref="accessTokenSealer" p:replayCache-ref="shibboleth.ReplayCache" />

	<bean id="accessTokenSealer" lazy-init="true"
		class="net.shibboleth.utilities.java.support.security.DataSealer"
		p:keyStrategy-ref="shibboleth.DataSealerKeyStrategy" p:encoder-ref="atBase64Codec"
		p:decoder-ref="atBase64Codec" />

	<bean id="atBase64Codec" class="org.apache.commons.codec.binary.Base64"
		c:lineLength="0" c:lineSeparator="#{new byte[] {10} }" c:urlSafe="true" />

	<bean id="OIDCMetadataLookup"
		class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor"
		scope="prototype" c:executionDirection="INBOUND">
		<constructor-arg name="messageHandler">
			<bean
				class="org.geant.idpextension.oidc.profile.impl.OIDCMetadataLookupHandler"
				scope="prototype">
				<property name="clientInformationResolver">
					<ref bean="shibboleth.ClientInformationResolver" />
				</property>
				<property name="clientIDLookupStrategy">
					<ref bean="shibboleth.UserInfoRequestClientIDLookupStrategy" />
				</property>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="shibboleth.UserInfoRequestClientIDLookupStrategy"
		class="org.geant.idpextension.oidc.profile.context.navigate.UserInfoRequestClientIDLookupFunction"
		scope="prototype" />

	<bean id="LogEvent" class="org.opensaml.profile.action.impl.LogEvent"
		scope="prototype"
		p:suppressedEvents="#{getObject('shibboleth.SuppressedEvents') ?: getObject('shibboleth.DefaultSuppressedEvents')}">
		<property name="eventContextLookupStrategy">
			<bean
				class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
		</property>
	</bean>

	<bean id="EncodeMessage"
		class="org.geant.idpextension.oidc.profile.action.impl.EncodeMessage"
		scope="prototype" p:messageEncoder-ref="shibboleth.Encoders.OIDCUserInfoResponseEncoder" />

	<bean id="shibboleth.Encoders.OIDCUserInfoResponseEncoder"
		class="org.geant.idpextension.oidc.encoding.impl.NimbusResponseEncoder"
		scope="prototype" init-method="" p:httpServletResponse-ref="shibboleth.HttpServletResponse" />

	<bean id="BuildErrorResponseFromEvent"
		class="org.geant.idpextension.oidc.profile.impl.BuildUserInfoErrorResponseFromEvent"
		scope="prototype" p:httpServletResponse-ref="shibboleth.HttpServletResponse">
		<property name="eventContextLookupStrategy">
			<bean
				class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
		</property>
		<property name="mappedErrors">
			<map value-type="com.nimbusds.oauth2.sdk.ErrorObject">
				<entry
					key="#{T(org.geant.idpextension.oidc.profile.OidcEventIds).INVALID_GRANT}"
					value="#{T(com.nimbusds.oauth2.sdk.OAuth2Error).INVALID_GRANT}" />
			</map>
		</property>
	</bean>

	<bean id="RecordResponseComplete" class="net.shibboleth.idp.profile.impl.RecordResponseComplete"
		scope="prototype" />

</beans>
