<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    default-init-method="initialize" default-destroy-method="destroy">

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
        p:placeholderPrefix="%{" p:placeholderSuffix="}" />

    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />

    <bean id="PopulateMetricContext"
        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />

    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
    <import resource="../../../system/conf/audit-system.xml" />

    <!-- The profile and logging id used as arguments are for development 
        phase only -->
    <bean id="InitializeProfileRequestContext"
        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext"
        scope="prototype" p:profileId="http://csc.fi/ns/profiles/oidc/registration"
        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
        p:browserProfile="true" />

    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage"
        scope="prototype">
        <constructor-arg>
            <bean
                class="org.geant.idpextension.oidc.decoding.impl.OIDCClientRegistrationRequestDecoder"
                scope="prototype" p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
        </constructor-arg>
    </bean>

    <bean id="InitializeRelyingPartyContext"
        class="org.geant.idpextension.oidc.profile.impl.InitializeRegistrationRelyingPartyContext"
        scope="prototype" />

    <bean id="GenerateClientID"
        class="org.geant.idpextension.oidc.profile.impl.GenerateClientID"
        scope="prototype" />

    <bean id="ClientInformationManager"
        class="org.geant.idpextension.oidc.metadata.impl.StorageServiceClientInformationManager"
        scope="prototype" p:id="cim" p:storageService-ref="shibboleth.StorageService"/>

    <bean id="StoreClientInformation"
        class="org.geant.idpextension.oidc.profile.impl.StoreClientInformation"
        scope="prototype" p:clientInformationManager-ref="ClientInformationManager" />

    <bean id="SelectRelyingPartyConfiguration"
        class="net.shibboleth.idp.profile.impl.SelectRelyingPartyConfiguration"
        scope="prototype" p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />

    <bean id="SelectProfileConfiguration"
        class="net.shibboleth.idp.profile.impl.SelectProfileConfiguration"
        scope="prototype" />

    <bean id="InitializeOutboundMessageContext" class="org.geant.idpextension.oidc.profile.impl.InitializeOutboundRegistrationResponseMessageContext"
        scope="prototype">
    </bean>
    
    <bean id="BuildErrorResponseFromEvent" class="org.geant.idpextension.oidc.profile.impl.BuildRegistrationErrorResponseFromEvent"
        scope="prototype" p:httpServletResponse-ref="shibboleth.HttpServletResponse">
        <property name="eventContextLookupStrategy">
            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
        </property>    
    </bean>

    <bean id="BuildClientInformation" class="org.geant.idpextension.oidc.profile.impl.BuildClientInformation"
        scope="prototype" />

    <bean id="BuildRegistrationResponse" class="org.geant.idpextension.oidc.profile.impl.BuildRegistrationResponse"
        scope="prototype" p:httpServletResponse-ref="shibboleth.HttpServletResponse" />

    <bean id="LogEvent" class="org.opensaml.profile.action.impl.LogEvent" scope="prototype"
            p:suppressedEvents="#{getObject('shibboleth.SuppressedEvents') ?: getObject('shibboleth.DefaultSuppressedEvents')}">
        <property name="eventContextLookupStrategy">
            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
        </property>
    </bean>

    <bean id="RecordResponseComplete"
        class="net.shibboleth.idp.profile.impl.RecordResponseComplete"
        scope="prototype" />

</beans>