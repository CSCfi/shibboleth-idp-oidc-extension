<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

    default-init-method="initialize" default-destroy-method="destroy">

    <!-- This file contains default oidc signing credentials. This file should be imported to credentials.xml -->

    <bean id="shibboleth.oidc.DefaultRSSigningCredential"
        class="org.geant.idpextension.oidc.profile.spring.factory.BasicJWKCredentialFactoryBean"
        p:jWKResource="%{idp.signing.oidc.rs.key}" />

    <bean id="shibboleth.oidc.DefaultESSigningCredential"
        class="org.geant.idpextension.oidc.profile.spring.factory.BasicJWKCredentialFactoryBean"
        p:jWKResource="%{idp.signing.oidc.es.key}" />

    <bean id="shibboleth.oidc.DefaultRSAEncryptionCredential"
        class="org.geant.idpextension.oidc.profile.spring.factory.BasicJWKCredentialFactoryBean"
        p:jWKResource="%{idp.signing.oidc.rsa.enc.key}" />


    <!-- The list of ALL of your OP's ID Token / UserInfo response signing credentials for the default security configuration. 
        If you define additional signing credentials, for example for new supported signing algorithms, make sure to include them 
        within this list. -->
    <util:list id="shibboleth.oidc.SigningCredentials">
        <ref bean="shibboleth.oidc.DefaultRSSigningCredential" />
        <ref bean="shibboleth.oidc.DefaultESSigningCredential" />
    </util:list>

    <!-- The list of ALL of your OP's Request Object decryption credentials for the default security configuration. If you 
        define additional decryption credentials, for example to support new algorithm, make sure to include them within 
        this list. -->
    <util:list id="shibboleth.oidc.EncryptionCredentials">
        <ref bean="shibboleth.oidc.DefaultRSAEncryptionCredential" />
    </util:list>

    <!-- If you need to publish key set different from shibboleth.oidc.EncryptionCredentials, define a list named as shibboleth.oidc.EncryptionCredentialsToPublish -->
    <alias name="shibboleth.oidc.EncryptionCredentials" alias="shibboleth.oidc.EncryptionCredentialsToPublish" />
    <!--
    Example of case having two active encryption credentials but then stop publishing the second before removing it from active configuration.
    <util:list id="shibboleth.oidc.EncryptionCredentialsToPublish">
        <ref bean="shibboleth.oidc.OnlyNewDefaultRSAEncryptionCredential" />
    </util:list>
    -->

    <!-- If you need to publish key set different from shibboleth.oidc.SigningCredentials, define a list named as shibboleth.oidc.SigningCredentialsToPublish -->
    <alias name="shibboleth.oidc.SigningCredentials" alias="shibboleth.oidc.SigningCredentialsToPublish" />
    <!--
    Example of case publishing signing credential before taking it to active configuration: 
    
    <util:list id="shibboleth.oidc.SigningCredentialsToPublish">
        <ref bean="shibboleth.oidc.DefaultRSSigningCredential" />
        <ref bean="shibboleth.oidc.DefaultESSigningCredential" />
        <ref bean="shibboleth.oidc.UpcomingDefaultRSSigningCredential" />
    </util:list>
    -->

</beans>
