# Set the Open ID Connect Issuer value 
idp.oidc.issuer = https://your.issuer.example.com

#Dynamic registration properties
# Storage for client registration data. Set to persistent storage if required to preserve between restarts.
#idp.oidc.dynreg.StorageService = shibboleth.StorageService
# The validity of registration before a new one is required.
#idp.oidc.dynreg.defaultRegistrationValidity = PT24H
# The validity of client secret registered  
#idp.oidc.dynreg.defaultSecretExpiration = P12M
# The default scopes accepted in dynamic registration
#idp.oidc.dynreg.defaultScope = openid profile email address phone offline_access
# The default subject type if not set by client in request. Maybe set to pairwise or public.
#idp.oidc.dynreg.defaultSubjectType = public
# The acceptable client authentication methods when using dynamic registration
#idp.oidc.dynreg.tokenEndpointAuthMethods = client_secret_basic,client_secret_post,client_secret_jwt,private_key_jwt
# Regardless of what signing algorithms are configured, allow none for request object signing
#idp.oidc.dynreg.allowNoneForRequestSigning = true

# Storage for storing remote jwk sets.
#idp.oidc.jwk.StorageService = shibboleth.StorageService

#Authorization/Token endpoint properties
# The acceptable client authentication methods
#idp.oidc.tokenEndpointAuthMethods = client_secret_basic,client_secret_post,client_secret_jwt,private_key_jwt

# Default lifetime of oidc tokens
#idp.oidc.authorizeCode.defaultLifetime = PT5M
#idp.oidc.accessToken.defaultLifetime = PT10M
#idp.oidc.refreshToken.defaultLifetime = PT2H
#idp.oidc.idToken.defaultLifetime = PT1H

# Lifetime of entries in revocation cache for authorize code
#idp.oidc.revocationCache.authorizeCode.lifetime = PT6H
# Storage for revocation cache. Requires server-side storage
#idp.oidc.revocationCache.StorageService = shibboleth.StorageService

# Whether the user presence is checked when userinfo endpoint is accessed. 
# Turn the user presence check off. Performed only if SSO is enabled and server side storage is used for sessions. 
#idp.oidc.userPresenceCheckDisabled = false

# Signing keys for oidc id tokens / userinfo response. 
idp.signing.oidc.rs.key = %{idp.home}/credentials/idp-signing-rs.jwk
idp.signing.oidc.es.key = %{idp.home}/credentials/idp-signing-es.jwk
# Request object decryption key
idp.signing.oidc.rsa.enc.key = %{idp.home}/credentials/idp-encryption-rsa.jwk
